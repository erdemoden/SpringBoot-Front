{"ast":null,"code":"import { isValidElementType } from 'react-is';\nimport invariant from '../utils/invariant';\n/**\n * Simple helper that gets a single screen (React component or navigator)\n * out of the navigator config.\n */\n\nexport default function getScreenForRouteName(routeConfigs, routeName) {\n  const routeConfig = routeConfigs[routeName];\n\n  if (!routeConfig) {\n    throw new Error(\"There is no route defined for key \".concat(routeName, \".\\n\") + \"Must be one of: \".concat(Object.keys(routeConfigs).map(a => \"'\".concat(a, \"'\")).join(',')));\n  }\n\n  if (routeConfig.screen) {\n    return routeConfig.screen;\n  }\n\n  if (typeof routeConfig.getScreen === 'function') {\n    const screen = routeConfig.getScreen();\n    invariant(isValidElementType(screen), \"The getScreen defined for route '\".concat(routeName, \" didn't return a valid \") + 'screen or navigator.\\n\\n' + 'Please pass it like this:\\n' + \"\".concat(routeName, \": {\\n  getScreen: () => require('./MyScreen').default\\n}\"));\n    return screen;\n  }\n\n  return routeConfig;\n}","map":{"version":3,"mappings":"AAAA,SAASA,kBAAT,QAAmC,UAAnC;AAEA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA;;;;;AAIA,eAAe,SAASC,qBAAT,CAA+BC,YAA/B,EAA6CC,SAA7C,EAAwD;AACrE,QAAMC,WAAW,GAAGF,YAAY,CAACC,SAAD,CAAhC;;AAEA,MAAI,CAACC,WAAL,EAAkB;AAChB,UAAM,IAAIC,KAAJ,CACJ,4CAAqCF,SAArC,qCACqBG,MAAM,CAACC,IAAPD,CAAYJ,YAAZI,EAChBE,GADgBF,CACXG,CAAD,eAAWA,CAAX,MADYH,EAEhBI,IAFgBJ,CAEX,GAFWA,CADrB,CADI,CAAN;AAMD;;AAED,MAAIF,WAAW,CAACO,MAAhB,EAAwB;AACtB,WAAOP,WAAW,CAACO,MAAnB;AACD;;AAED,MAAI,OAAOP,WAAW,CAACQ,SAAnB,KAAiC,UAArC,EAAiD;AAC/C,UAAMD,MAAM,GAAGP,WAAW,CAACQ,SAAZR,EAAf;AACAJ,aAAS,CACPD,kBAAkB,CAACY,MAAD,CADX,EAEP,2CAAoCR,SAApC,+BACE,0BADF,GAEE,6BAFF,aAGKA,SAHL,6DAFO,CAATH;AAOA,WAAOW,MAAP;AACD;;AAED,SAAOP,WAAP;AACD","names":["isValidElementType","invariant","getScreenForRouteName","routeConfigs","routeName","routeConfig","Error","Object","keys","map","a","join","screen","getScreen"],"sources":["/Users/erdemoden/Desktop/React-js/blog-app/node_modules/@react-navigation/core/lib/module/routers/getScreenForRouteName.js"],"sourcesContent":["import { isValidElementType } from 'react-is';\n\nimport invariant from '../utils/invariant';\n\n/**\n * Simple helper that gets a single screen (React component or navigator)\n * out of the navigator config.\n */\nexport default function getScreenForRouteName(routeConfigs, routeName) {\n  const routeConfig = routeConfigs[routeName];\n\n  if (!routeConfig) {\n    throw new Error(\n      `There is no route defined for key ${routeName}.\\n` +\n        `Must be one of: ${Object.keys(routeConfigs)\n          .map((a) => `'${a}'`)\n          .join(',')}`\n    );\n  }\n\n  if (routeConfig.screen) {\n    return routeConfig.screen;\n  }\n\n  if (typeof routeConfig.getScreen === 'function') {\n    const screen = routeConfig.getScreen();\n    invariant(\n      isValidElementType(screen),\n      `The getScreen defined for route '${routeName} didn't return a valid ` +\n        'screen or navigator.\\n\\n' +\n        'Please pass it like this:\\n' +\n        `${routeName}: {\\n  getScreen: () => require('./MyScreen').default\\n}`\n    );\n    return screen;\n  }\n\n  return routeConfig;\n}\n"]},"metadata":{},"sourceType":"module"}