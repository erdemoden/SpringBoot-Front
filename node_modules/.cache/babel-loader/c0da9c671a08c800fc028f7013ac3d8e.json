{"ast":null,"code":"//import { json } from \"express/lib/response\";\nimport cookies from 'js-cookie';\nexport const PostWithAuth = async (url, body) => {\n  var request = await fetch(url, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": localStorage.getItem(\"jwtsession\")\n    },\n    body: JSON.stringify(body)\n  });\n  return request;\n};\n_c = PostWithAuth;\nexport const GetWithAuth = async url => {\n  const response = await fetch(url, {\n    method: 'GET',\n    withCredentials: true,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": localStorage.getItem(\"jwtsession\")\n    }\n  });\n  return await response.json();\n};\n_c2 = GetWithAuth;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostWithAuth\");\n$RefreshReg$(_c2, \"GetWithAuth\");","map":{"version":3,"sources":["/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Services/HttpServices.js"],"names":["cookies","PostWithAuth","url","body","request","fetch","method","headers","localStorage","getItem","JSON","stringify","GetWithAuth","response","withCredentials","json"],"mappings":"AAAA;AACA,OAAOA,OAAP,MAAoB,WAApB;AAEA,OAAO,MAAMC,YAAY,GAAG,OAAMC,GAAN,EAAUC,IAAV,KAAiB;AAC7C,MAAIC,OAAO,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAK;AAC9BI,IAAAA,MAAM,EAAC,MADuB;AAE9BC,IAAAA,OAAO,EAAC;AACJ,sBAAe,kBADX;AAEJ,uBAAgBC,YAAY,CAACC,OAAb,CAAqB,YAArB;AAFZ,KAFsB;AAM9BN,IAAAA,IAAI,EAACO,IAAI,CAACC,SAAL,CAAeR,IAAf;AANyB,GAAL,CAAzB;AASA,SAAOC,OAAP;AACC,CAXM;KAAMH,Y;AAYZ,OAAO,MAAMW,WAAW,GAAG,MAAMV,GAAN,IAAY;AACrC,QAAMW,QAAQ,GAAG,MAAMR,KAAK,CAACH,GAAD,EAAK;AAC5BI,IAAAA,MAAM,EAAC,KADqB;AAE5BQ,IAAAA,eAAe,EAAC,IAFY;AAG5BP,IAAAA,OAAO,EAAC;AACJ,sBAAe,kBADX;AAEJ,uBAAgBC,YAAY,CAACC,OAAb,CAAqB,YAArB;AAFZ;AAHoB,GAAL,CAA5B;AAQC,SAAO,MAAMI,QAAQ,CAACE,IAAT,EAAb;AACH,CAVO;MAAMH,W","sourcesContent":["//import { json } from \"express/lib/response\";\nimport cookies from 'js-cookie'\n\nexport const PostWithAuth = async(url,body)=>{\nvar request = await fetch(url,{\nmethod:'POST',\nheaders:{\n    \"Content-Type\":\"application/json\",\n    \"Authorization\":localStorage.getItem(\"jwtsession\")\n},\nbody:JSON.stringify(body)\n\n});\nreturn request;\n}\n export const GetWithAuth = async(url)=>{\n   const response = await fetch(url,{\n        method:'GET',\n        withCredentials:true,\n        headers:{\n            \"Content-Type\":\"application/json\",\n            \"Authorization\":localStorage.getItem(\"jwtsession\")\n        }\n    });\n    return await response.json()\n}"]},"metadata":{},"sourceType":"module"}