{"ast":null,"code":"import getNavigationActionCreators from './routers/getNavigationActionCreators';\nimport getChildNavigation from './getChildNavigation';\nimport getChildrenNavigationCache from './getChildrenNavigationCache';\nexport default function getNavigation(router, state, dispatch, actionSubscribers, getScreenProps, getCurrentNavigation) {\n  const actions = router.getActionCreators(state, null);\n  const navigation = {\n    actions,\n    router,\n    state,\n    dispatch,\n    getScreenProps,\n    getChildNavigation: childKey => getChildNavigation(navigation, childKey, getCurrentNavigation),\n    isFocused: childKey => {\n      const {\n        routes,\n        index\n      } = getCurrentNavigation().state;\n\n      if (childKey == null || routes[index].key === childKey) {\n        return true;\n      }\n\n      return false;\n    },\n    addListener: (eventName, handler) => {\n      if (eventName !== 'action') {\n        return {\n          remove: () => {}\n        };\n      }\n\n      actionSubscribers.add(handler);\n      return {\n        remove: () => {\n          actionSubscribers.delete(handler);\n        }\n      };\n    },\n    dangerouslyGetParent: () => null,\n    isFirstRouteInParent: () => true,\n    _childrenNavigation: getChildrenNavigationCache(getCurrentNavigation())\n  };\n  const actionCreators = { ...getNavigationActionCreators(navigation.state),\n    ...actions\n  };\n  Object.keys(actionCreators).forEach(actionName => {\n    navigation[actionName] = function () {\n      return navigation.dispatch(actionCreators[actionName](...arguments));\n    };\n  });\n  return navigation;\n}","map":{"version":3,"mappings":"AAAA,OAAOA,2BAAP,MAAwC,uCAAxC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,0BAAP,MAAuC,8BAAvC;AAEA,eAAe,SAASC,aAAT,CACbC,MADa,EAEbC,KAFa,EAGbC,QAHa,EAIbC,iBAJa,EAKbC,cALa,EAMbC,oBANa,EAOb;AACA,QAAMC,OAAO,GAAGN,MAAM,CAACO,iBAAPP,CAAyBC,KAAzBD,EAAgC,IAAhCA,CAAhB;AAEA,QAAMQ,UAAU,GAAG;AACjBF,WADiB;AAEjBN,UAFiB;AAGjBC,SAHiB;AAIjBC,YAJiB;AAKjBE,kBALiB;AAMjBP,sBAAkB,EAAGY,QAAD,IAClBZ,kBAAkB,CAACW,UAAD,EAAaC,QAAb,EAAuBJ,oBAAvB,CAPH;AAQjBK,aAAS,EAAGD,QAAD,IAAc;AACvB,YAAM;AAAEE,cAAF;AAAUC;AAAV,UAAoBP,oBAAoB,GAAGJ,KAAjD;;AACA,UAAIQ,QAAQ,IAAI,IAAZA,IAAoBE,MAAM,CAACC,KAAD,CAAND,CAAcE,GAAdF,KAAsBF,QAA9C,EAAwD;AACtD,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AAbe;AAejBK,eAAW,EAAE,CAACC,SAAD,EAAYC,OAAZ,KAAwB;AACnC,UAAID,SAAS,KAAK,QAAlB,EAA4B;AAC1B,eAAO;AAAEE,gBAAM,EAAE,MAAM,CAAE;AAAlB,SAAP;AACD;;AACDd,uBAAiB,CAACe,GAAlBf,CAAsBa,OAAtBb;AACA,aAAO;AACLc,cAAM,EAAE,MAAM;AACZd,2BAAiB,CAACgB,MAAlBhB,CAAyBa,OAAzBb;AACD;AAHI,OAAP;AApBe;AA0BjBiB,wBAAoB,EAAE,MAAM,IA1BX;AA2BjBC,wBAAoB,EAAE,MAAM,IA3BX;AA4BjBC,uBAAmB,EAAExB,0BAA0B,CAACO,oBAAoB,EAArB;AA5B9B,GAAnB;AA+BA,QAAMkB,cAAc,GAAG,EACrB,GAAG3B,2BAA2B,CAACY,UAAU,CAACP,KAAZ,CADT;AAErB,OAAGK;AAFkB,GAAvB;AAKAkB,QAAM,CAACC,IAAPD,CAAYD,cAAZC,EAA4BE,OAA5BF,CAAqCG,UAAD,IAAgB;AAClDnB,cAAU,CAACmB,UAAD,CAAVnB,GAAyB;AAAA,aACvBA,UAAU,CAACN,QAAXM,CAAoBe,cAAc,CAACI,UAAD,CAAdJ,CAA2B,YAA3BA,CAApBf,CADuB;AAAA,KAAzBA;AADF;AAKA,SAAOA,UAAP;AACD","names":["getNavigationActionCreators","getChildNavigation","getChildrenNavigationCache","getNavigation","router","state","dispatch","actionSubscribers","getScreenProps","getCurrentNavigation","actions","getActionCreators","navigation","childKey","isFocused","routes","index","key","addListener","eventName","handler","remove","add","delete","dangerouslyGetParent","isFirstRouteInParent","_childrenNavigation","actionCreators","Object","keys","forEach","actionName"],"sources":["/Users/erdemoden/Desktop/React-js/blog-app/node_modules/@react-navigation/core/lib/module/getNavigation.js"],"sourcesContent":["import getNavigationActionCreators from './routers/getNavigationActionCreators';\nimport getChildNavigation from './getChildNavigation';\nimport getChildrenNavigationCache from './getChildrenNavigationCache';\n\nexport default function getNavigation(\n  router,\n  state,\n  dispatch,\n  actionSubscribers,\n  getScreenProps,\n  getCurrentNavigation\n) {\n  const actions = router.getActionCreators(state, null);\n\n  const navigation = {\n    actions,\n    router,\n    state,\n    dispatch,\n    getScreenProps,\n    getChildNavigation: (childKey) =>\n      getChildNavigation(navigation, childKey, getCurrentNavigation),\n    isFocused: (childKey) => {\n      const { routes, index } = getCurrentNavigation().state;\n      if (childKey == null || routes[index].key === childKey) {\n        return true;\n      }\n      return false;\n    },\n    addListener: (eventName, handler) => {\n      if (eventName !== 'action') {\n        return { remove: () => {} };\n      }\n      actionSubscribers.add(handler);\n      return {\n        remove: () => {\n          actionSubscribers.delete(handler);\n        },\n      };\n    },\n    dangerouslyGetParent: () => null,\n    isFirstRouteInParent: () => true,\n    _childrenNavigation: getChildrenNavigationCache(getCurrentNavigation()),\n  };\n\n  const actionCreators = {\n    ...getNavigationActionCreators(navigation.state),\n    ...actions,\n  };\n\n  Object.keys(actionCreators).forEach((actionName) => {\n    navigation[actionName] = (...args) =>\n      navigation.dispatch(actionCreators[actionName](...args));\n  });\n\n  return navigation;\n}\n"]},"metadata":{},"sourceType":"module"}