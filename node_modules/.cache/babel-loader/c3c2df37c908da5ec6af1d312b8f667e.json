{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport invariant from '../utils/invariant';\nimport ThemeContext from '../views/ThemeContext';\nimport NavigationFocusEvents from '../views/NavigationFocusEvents';\n\nfunction createNavigator(NavigatorView, router, navigationConfig) {\n  class Navigator extends React.Component {\n    // eslint-disable-next-line react/sort-comp\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        descriptors: {},\n        screenProps: this.props.screenProps,\n        theme: context,\n        themeContext: context\n      };\n    }\n\n    static getDerivedStateFromProps(nextProps, currentState) {\n      const prevDescriptors = currentState.descriptors;\n      const {\n        navigation,\n        screenProps\n      } = nextProps;\n      invariant(navigation != null, 'The navigation prop is missing for this navigator. In react-navigation v3 and v4 you must set up your app container directly. More info: https://reactnavigation.org/docs/en/app-containers.html');\n      const {\n        state\n      } = navigation;\n      const {\n        routes\n      } = state;\n\n      if (typeof routes === 'undefined') {\n        throw new TypeError('No \"routes\" found in navigation state. Did you try to pass the navigation prop of a React component to a Navigator child? See https://reactnavigation.org/docs/en/custom-navigators.html#navigator-navigation-prop');\n      }\n\n      const descriptors = routes.reduce((descriptors, route) => {\n        if (prevDescriptors && prevDescriptors[route.key] && route === prevDescriptors[route.key].state && screenProps === currentState.screenProps && currentState.themeContext === currentState.theme) {\n          descriptors[route.key] = prevDescriptors[route.key];\n          return descriptors;\n        }\n\n        const getComponent = router.getComponentForRouteName.bind(null, route.routeName);\n        const childNavigation = navigation.getChildNavigation(route.key);\n        const options = router.getScreenOptions(childNavigation, screenProps, currentState.themeContext);\n        descriptors[route.key] = {\n          key: route.key,\n          getComponent,\n          options,\n          state: route,\n          navigation: childNavigation\n        };\n        return descriptors;\n      }, {});\n      return {\n        descriptors,\n        screenProps,\n        theme: state.themeContext\n      };\n    }\n\n    componentDidUpdate() {\n      if (this.context !== this.state.themeContext) {\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({\n          themeContext: this.context\n        });\n      }\n    }\n\n    render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavigationFocusEvents, {\n        navigation: this.props.navigation,\n        onEvent: (target, type, data) => {\n          var _this$state$descripto;\n\n          (_this$state$descripto = this.state.descriptors[target]) === null || _this$state$descripto === void 0 ? void 0 : _this$state$descripto.navigation.emit(type, data);\n        }\n      }), /*#__PURE__*/React.createElement(NavigatorView, _extends({}, this.props, {\n        screenProps: this.state.screenProps,\n        navigation: this.props.navigation,\n        navigationConfig: navigationConfig,\n        descriptors: this.state.descriptors\n      })));\n    }\n\n  }\n\n  _defineProperty(Navigator, \"contextType\", ThemeContext);\n\n  _defineProperty(Navigator, \"router\", router);\n\n  _defineProperty(Navigator, \"navigationOptions\", navigationConfig.navigationOptions);\n\n  return Navigator;\n}\n\nexport default createNavigator;","map":{"version":3,"mappings":"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","names":["React","invariant","ThemeContext","NavigationFocusEvents","createNavigator","NavigatorView","router","navigationConfig","Navigator","Component","constructor","props","context","state","descriptors","screenProps","theme","themeContext","getDerivedStateFromProps","nextProps","currentState","prevDescriptors","navigation","routes","TypeError","reduce","route","key","getComponent","getComponentForRouteName","bind","routeName","childNavigation","getChildNavigation","options","getScreenOptions","componentDidUpdate","setState","render","Fragment","onEvent","target","type","data","emit","_defineProperty","navigationOptions"],"sources":["/Users/erdemoden/Desktop/React-js/blog-app/node_modules/@react-navigation/core/lib/module/navigators/createNavigator.js"],"sourcesContent":["import * as React from 'react';\nimport invariant from '../utils/invariant';\nimport ThemeContext from '../views/ThemeContext';\nimport NavigationFocusEvents from '../views/NavigationFocusEvents';\n\nfunction createNavigator(NavigatorView, router, navigationConfig) {\n  class Navigator extends React.Component {\n    // eslint-disable-next-line react/sort-comp\n    static contextType = ThemeContext;\n    static router = router;\n    static navigationOptions = navigationConfig.navigationOptions;\n\n    constructor(props, context) {\n      super(props, context);\n\n      this.state = {\n        descriptors: {},\n        screenProps: this.props.screenProps,\n        theme: context,\n        themeContext: context,\n      };\n    }\n\n    static getDerivedStateFromProps(nextProps, currentState) {\n      const prevDescriptors = currentState.descriptors;\n      const { navigation, screenProps } = nextProps;\n      invariant(\n        navigation != null,\n        'The navigation prop is missing for this navigator. In react-navigation v3 and v4 you must set up your app container directly. More info: https://reactnavigation.org/docs/en/app-containers.html'\n      );\n      const { state } = navigation;\n      const { routes } = state;\n      if (typeof routes === 'undefined') {\n        throw new TypeError(\n          'No \"routes\" found in navigation state. Did you try to pass the navigation prop of a React component to a Navigator child? See https://reactnavigation.org/docs/en/custom-navigators.html#navigator-navigation-prop'\n        );\n      }\n\n      const descriptors = routes.reduce((descriptors, route) => {\n        if (\n          prevDescriptors &&\n          prevDescriptors[route.key] &&\n          route === prevDescriptors[route.key].state &&\n          screenProps === currentState.screenProps &&\n          currentState.themeContext === currentState.theme\n        ) {\n          descriptors[route.key] = prevDescriptors[route.key];\n          return descriptors;\n        }\n        const getComponent = router.getComponentForRouteName.bind(\n          null,\n          route.routeName\n        );\n        const childNavigation = navigation.getChildNavigation(route.key);\n        const options = router.getScreenOptions(\n          childNavigation,\n          screenProps,\n          currentState.themeContext\n        );\n        descriptors[route.key] = {\n          key: route.key,\n          getComponent,\n          options,\n          state: route,\n          navigation: childNavigation,\n        };\n        return descriptors;\n      }, {});\n\n      return { descriptors, screenProps, theme: state.themeContext };\n    }\n\n    componentDidUpdate() {\n      if (this.context !== this.state.themeContext) {\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({ themeContext: this.context });\n      }\n    }\n\n    render() {\n      return (\n        <React.Fragment>\n          <NavigationFocusEvents\n            navigation={this.props.navigation}\n            onEvent={(target, type, data) => {\n              this.state.descriptors[target]?.navigation.emit(type, data);\n            }}\n          />\n          <NavigatorView\n            {...this.props}\n            screenProps={this.state.screenProps}\n            navigation={this.props.navigation}\n            navigationConfig={navigationConfig}\n            descriptors={this.state.descriptors}\n          />\n        </React.Fragment>\n      );\n    }\n  }\n\n  return Navigator;\n}\n\nexport default createNavigator;\n"]},"metadata":{},"sourceType":"module"}