{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport { SceneView } from '@react-navigation/core';\nconst FAR_FAR_AWAY = 3000; // this should be big enough to move the whole view out of its container\n\nclass ResourceSavingSceneView extends React.PureComponent {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.isFocused && !prevState.awake) {\n      return {\n        awake: true\n      };\n    } else {\n      return null;\n    }\n  }\n\n  constructor(props) {\n    super();\n\n    _defineProperty(this, \"_mustAlwaysBeVisible\", () => {\n      return this.props.animationEnabled || this.props.swipeEnabled;\n    });\n\n    this.state = {\n      awake: props.lazy ? props.isFocused : true\n    };\n  }\n\n  render() {\n    const {\n      awake\n    } = this.state;\n    const {\n      isFocused,\n      childNavigation,\n      removeClippedSubviews,\n      ...rest\n    } = this.props;\n    return /*#__PURE__*/React.createElement(View, {\n      style: styles.container,\n      collapsable: false,\n      removeClippedSubviews: Platform.OS === 'android' ? removeClippedSubviews : !isFocused && removeClippedSubviews\n    }, /*#__PURE__*/React.createElement(View, {\n      style: this._mustAlwaysBeVisible() || isFocused ? styles.innerAttached : styles.innerDetached\n    }, awake ? /*#__PURE__*/React.createElement(SceneView, _extends({}, rest, {\n      navigation: childNavigation\n    })) : null));\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  innerAttached: {\n    flex: 1\n  },\n  innerDetached: {\n    flex: 1,\n    top: FAR_FAR_AWAY\n  }\n});\nexport default ResourceSavingSceneView;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,IAA/B,QAA2C,cAA3C;AACA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,MAAMC,YAAY,GAAG,IAArB,C,CAA2B;;AAE3B,MAAMC,uBAAN,SAAsCN,KAAK,CAACO,aAA5C,CAA0D;AACxD,SAAOC,wBAAP,CAAgCC,SAAhC,EAA2CC,SAA3C,EAAsD;AACpD,QAAID,SAAS,CAACE,SAAVF,IAAuB,CAACC,SAAS,CAACE,KAAtC,EAA6C;AAC3C,aAAO;AAAEA,aAAK,EAAE;AAAT,OAAP;AADF,WAEO;AACL,aAAO,IAAP;AACD;AACF;;AAEDC,aAAW,CAACC,KAAD,EAAQ;AACjB;;AADiBC,kDAQI,MAAM;AAC3B,aAAO,KAAKD,KAAL,CAAWE,gBAAX,IAA+B,KAAKF,KAAL,CAAWG,YAAjD;AATiB;;AAGjB,SAAKC,KAAL,GAAa;AACXN,WAAK,EAAEE,KAAK,CAACK,IAANL,GAAaA,KAAK,CAACH,SAAnBG,GAA+B;AAD3B,KAAb;AAGD;;AAMDM,QAAM,GAAG;AACP,UAAM;AAAER;AAAF,QAAY,KAAKM,KAAvB;AACA,UAAM;AACJP,eADI;AAEJU,qBAFI;AAGJC,2BAHI;AAIJ,SAAGC;AAJC,QAKF,KAAKT,KALT;AAOA,wBACEd,oBAACG,IAAD;AACEqB,WAAK,EAAEC,MAAM,CAACC,SADhB;AAEEC,iBAAW,EAAE,KAFf;AAGEL,2BAAqB,EACnBrB,QAAQ,CAAC2B,EAAT3B,KAAgB,SAAhBA,GACIqB,qBADJrB,GAEI,CAACU,SAAD,IAAcW;AANtB,oBASEtB,oBAACG,IAAD;AACEqB,WAAK,EACH,KAAKK,oBAAL,MAA+BlB,SAA/B,GACIc,MAAM,CAACK,aADX,GAEIL,MAAM,CAACM;AAJf,OAOGnB,KAAK,gBAAGZ,oBAACI,SAAD,eAAemB,IAAf;AAAqBS,gBAAU,EAAEX;AAAjC,OAAH,GAA0D,IAPlE,CATF,CADF;AAqBD;;AAnDuD;;AAsD1D,MAAMI,MAAM,GAAGvB,UAAU,CAAC+B,MAAX/B,CAAkB;AAC/BwB,WAAS,EAAE;AACTQ,QAAI,EAAE,CADG;AAETC,YAAQ,EAAE;AAFD,GADoB;AAK/BL,eAAa,EAAE;AACbI,QAAI,EAAE;AADO,GALgB;AAQ/BH,eAAa,EAAE;AACbG,QAAI,EAAE,CADO;AAEbE,OAAG,EAAE/B;AAFQ;AARgB,CAAlBH,CAAf;AAcA,eAAeI,uBAAf","names":["React","Platform","StyleSheet","View","SceneView","FAR_FAR_AWAY","ResourceSavingSceneView","PureComponent","getDerivedStateFromProps","nextProps","prevState","isFocused","awake","constructor","props","_defineProperty","animationEnabled","swipeEnabled","state","lazy","render","childNavigation","removeClippedSubviews","rest","style","styles","container","collapsable","OS","_mustAlwaysBeVisible","innerAttached","innerDetached","navigation","create","flex","overflow","top"],"sources":["/Users/erdemoden/Desktop/React-js/blog-app/node_modules/@react-navigation/native/lib/module/ResourceSavingSceneView.js"],"sourcesContent":["import * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport { SceneView } from '@react-navigation/core';\n\nconst FAR_FAR_AWAY = 3000; // this should be big enough to move the whole view out of its container\n\nclass ResourceSavingSceneView extends React.PureComponent {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.isFocused && !prevState.awake) {\n      return { awake: true };\n    } else {\n      return null;\n    }\n  }\n\n  constructor(props) {\n    super();\n\n    this.state = {\n      awake: props.lazy ? props.isFocused : true,\n    };\n  }\n\n  _mustAlwaysBeVisible = () => {\n    return this.props.animationEnabled || this.props.swipeEnabled;\n  };\n\n  render() {\n    const { awake } = this.state;\n    const {\n      isFocused,\n      childNavigation,\n      removeClippedSubviews,\n      ...rest\n    } = this.props;\n\n    return (\n      <View\n        style={styles.container}\n        collapsable={false}\n        removeClippedSubviews={\n          Platform.OS === 'android'\n            ? removeClippedSubviews\n            : !isFocused && removeClippedSubviews\n        }\n      >\n        <View\n          style={\n            this._mustAlwaysBeVisible() || isFocused\n              ? styles.innerAttached\n              : styles.innerDetached\n          }\n        >\n          {awake ? <SceneView {...rest} navigation={childNavigation} /> : null}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  innerAttached: {\n    flex: 1,\n  },\n  innerDetached: {\n    flex: 1,\n    top: FAR_FAR_AWAY,\n  },\n});\n\nexport default ResourceSavingSceneView;\n"]},"metadata":{},"sourceType":"module"}