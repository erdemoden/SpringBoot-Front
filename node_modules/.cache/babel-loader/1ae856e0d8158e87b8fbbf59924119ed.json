{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\nimport { withNavigation } from '@react-navigation/core';\nexport default function createNavigationAwareScrollable(Component) {\n  var _class, _temp;\n\n  const ComponentWithNavigationScrolling = withNavigation((_temp = _class = class extends React.PureComponent {\n    componentDidMount() {\n      this._subscription = this.props.navigation.addListener('refocus', () => {\n        const scrollableNode = this.getNode();\n\n        if (this.props.navigation.isFocused() && scrollableNode !== null) {\n          if (scrollableNode.scrollToTop != null) {\n            scrollableNode.scrollToTop();\n          } else if (scrollableNode.scrollTo != null) {\n            scrollableNode.scrollTo({\n              y: 0\n            });\n          } else if (scrollableNode.scrollResponderScrollTo != null) {\n            scrollableNode.scrollResponderScrollTo({\n              y: 0\n            });\n          }\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      if (this._subscription != null) {\n        this._subscription.remove();\n      }\n    }\n\n    getNode() {\n      if (this._scrollRef === null) {\n        return null;\n      }\n\n      if (this._scrollRef.getScrollResponder) {\n        return this._scrollRef.getScrollResponder();\n      } else if (this._scrollRef.getNode) {\n        return this._scrollRef.getNode();\n      } else {\n        return this._scrollRef;\n      }\n    }\n\n    render() {\n      return /*#__PURE__*/React.createElement(Component, _extends({\n        ref: view => {\n          this._scrollRef = view;\n        }\n      }, this.props));\n    }\n\n  }, _defineProperty(_class, \"displayName\", \"withNavigationScrolling(\".concat(Component.displayName || Component.name, \")\")), _temp));\n\n  class NavigationAwareScrollable extends React.PureComponent {\n    constructor() {\n      var _this;\n\n      super(...arguments);\n      _this = this;\n\n      _defineProperty(this, \"_captureRef\", view => {\n        this._innerRef = view;\n        this.props.onRef && this.props.onRef(view);\n      });\n\n      _defineProperty(this, \"setNativeProps\", function () {\n        return _this._innerRef.getNode().setNativeProps(...arguments);\n      });\n\n      _defineProperty(this, \"getScrollResponder\", function () {\n        return _this._innerRef.getNode().getScrollResponder(...arguments);\n      });\n\n      _defineProperty(this, \"getScrollableNode\", function () {\n        return _this._innerRef.getNode().getScrollableNode(...arguments);\n      });\n\n      _defineProperty(this, \"getInnerViewNode\", function () {\n        return _this._innerRef.getNode().getInnerViewNode(...arguments);\n      });\n\n      _defineProperty(this, \"scrollTo\", function () {\n        return _this._innerRef.getNode().scrollTo(...arguments);\n      });\n\n      _defineProperty(this, \"scrollToEnd\", function () {\n        return _this._innerRef.getNode().scrollToEnd(...arguments);\n      });\n\n      _defineProperty(this, \"scrollWithoutAnimationTo\", function () {\n        return _this._innerRef.getNode().scrollWithoutAnimationTo(...arguments);\n      });\n\n      _defineProperty(this, \"flashScrollIndicators\", function () {\n        return _this._innerRef.getNode().flashScrollIndicators(...arguments);\n      });\n    }\n\n    render() {\n      return /*#__PURE__*/React.createElement(ComponentWithNavigationScrolling, _extends({}, this.props, {\n        onRef: this._captureRef\n      }));\n    }\n\n  }\n\n  _defineProperty(NavigationAwareScrollable, \"displayName\", \"NavigationAwareScrollable(\".concat(Component.displayName || Component.name, \")\"));\n\n  return hoistStatics(NavigationAwareScrollable, Component);\n}","map":{"version":3,"mappings":"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","names":["React","hoistStatics","withNavigation","createNavigationAwareScrollable","Component","ComponentWithNavigationScrolling","PureComponent","componentDidMount","_subscription","props","navigation","addListener","scrollableNode","getNode","isFocused","scrollToTop","scrollTo","y","scrollResponderScrollTo","componentWillUnmount","remove","_scrollRef","getScrollResponder","render","ref","view","displayName","name","NavigationAwareScrollable","constructor","_defineProperty","_innerRef","onRef","setNativeProps","getScrollableNode","getInnerViewNode","scrollToEnd","scrollWithoutAnimationTo","flashScrollIndicators","_captureRef"],"sources":["/Users/erdemoden/Desktop/React-js/blog-app/node_modules/@react-navigation/native/lib/module/createNavigationAwareScrollable.js"],"sourcesContent":["import * as React from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\nimport { withNavigation } from '@react-navigation/core';\n\nexport default function createNavigationAwareScrollable(Component) {\n  const ComponentWithNavigationScrolling = withNavigation(\n    class extends React.PureComponent {\n      static displayName = `withNavigationScrolling(${\n        Component.displayName || Component.name\n      })`;\n\n      componentDidMount() {\n        this._subscription = this.props.navigation.addListener(\n          'refocus',\n          () => {\n            const scrollableNode = this.getNode();\n            if (this.props.navigation.isFocused() && scrollableNode !== null) {\n              if (scrollableNode.scrollToTop != null) {\n                scrollableNode.scrollToTop();\n              } else if (scrollableNode.scrollTo != null) {\n                scrollableNode.scrollTo({ y: 0 });\n              } else if (scrollableNode.scrollResponderScrollTo != null) {\n                scrollableNode.scrollResponderScrollTo({ y: 0 });\n              }\n            }\n          }\n        );\n      }\n\n      componentWillUnmount() {\n        if (this._subscription != null) {\n          this._subscription.remove();\n        }\n      }\n\n      getNode() {\n        if (this._scrollRef === null) {\n          return null;\n        }\n\n        if (this._scrollRef.getScrollResponder) {\n          return this._scrollRef.getScrollResponder();\n        } else if (this._scrollRef.getNode) {\n          return this._scrollRef.getNode();\n        } else {\n          return this._scrollRef;\n        }\n      }\n\n      render() {\n        return (\n          <Component\n            ref={(view) => {\n              this._scrollRef = view;\n            }}\n            {...this.props}\n          />\n        );\n      }\n    }\n  );\n\n  class NavigationAwareScrollable extends React.PureComponent {\n    static displayName = `NavigationAwareScrollable(${\n      Component.displayName || Component.name\n    })`;\n\n    _captureRef = (view) => {\n      this._innerRef = view;\n      this.props.onRef && this.props.onRef(view);\n    };\n\n    setNativeProps = (...args) => {\n      return this._innerRef.getNode().setNativeProps(...args);\n    };\n\n    getScrollResponder = (...args) => {\n      return this._innerRef.getNode().getScrollResponder(...args);\n    };\n\n    getScrollableNode = (...args) => {\n      return this._innerRef.getNode().getScrollableNode(...args);\n    };\n\n    getInnerViewNode = (...args) => {\n      return this._innerRef.getNode().getInnerViewNode(...args);\n    };\n\n    scrollTo = (...args) => {\n      return this._innerRef.getNode().scrollTo(...args);\n    };\n\n    scrollToEnd = (...args) => {\n      return this._innerRef.getNode().scrollToEnd(...args);\n    };\n\n    scrollWithoutAnimationTo = (...args) => {\n      return this._innerRef.getNode().scrollWithoutAnimationTo(...args);\n    };\n\n    flashScrollIndicators = (...args) => {\n      return this._innerRef.getNode().flashScrollIndicators(...args);\n    };\n\n    render() {\n      return (\n        <ComponentWithNavigationScrolling\n          {...this.props}\n          onRef={this._captureRef}\n        />\n      );\n    }\n  }\n\n  return hoistStatics(NavigationAwareScrollable, Component);\n}\n"]},"metadata":{},"sourceType":"module"}