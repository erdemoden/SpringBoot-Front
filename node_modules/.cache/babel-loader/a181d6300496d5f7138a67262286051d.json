{"ast":null,"code":"var _jsxFileName = \"/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Components/Menu.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Menustyle from '../Styles/Menu.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { GetWithAuth, GetWithRefresh } from '../Services/HttpServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nconst Menu = props => {\n  _s();\n\n  const navigate = useNavigate();\n\n  const beforeLoad = async () => {\n    document.body.className = Menustyle.deneme;\n    let response = await GetWithAuth(\"http://localhost:1998/auth/route\");\n\n    if (response.route == \"/\") {\n      localStorage.removeItem(\"jwtsession\");\n      navigate(response.route);\n    } else {\n      props.setUserName(response.username);\n      navigate(response.route);\n    }\n  };\n\n  useEffect(() => {\n    beforeLoad();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: 'navbar navbar-dark bg-dark fixed-top flex ortalamenu' + Menustyle.shadow,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: Menustyle.white,\n        children: \"Welcome \" + props.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Menustyle.opened,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-success\",\n          id: Menustyle.buttons,\n          children: \"Your Writings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-success\",\n          id: Menustyle.buttons,\n          children: \"All Writings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-success\",\n          id: Menustyle.buttons,\n          children: \"Public Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-success\",\n          id: Menustyle.buttons,\n          children: \"Log-Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Menu, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Menu;\n\nconst mapStateToProps = state => {\n  return {\n    username: state.username\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUserName: username => {\n      dispatch({\n        'type': 'SET_NAME',\n        username\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Components/Menu.js"],"names":["React","Menustyle","useNavigate","useState","useEffect","connect","GetWithAuth","GetWithRefresh","axios","require","Menu","props","navigate","beforeLoad","document","body","className","deneme","response","route","localStorage","removeItem","setUserName","username","shadow","white","opened","buttons","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Menustyle from'../Styles/Menu.module.css'\nimport {useNavigate} from 'react-router-dom';\nimport { useState ,useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {GetWithAuth ,GetWithRefresh} from '../Services/HttpServices';\nconst axios = require('axios');\nconst Menu = (props)=>{\n    const navigate = useNavigate();\n        const beforeLoad = async()=>{\n          document.body.className = Menustyle.deneme;\n          let response = await GetWithAuth(\"http://localhost:1998/auth/route\");\n          if(response.route == \"/\"){\n          localStorage.removeItem(\"jwtsession\");\n          navigate(response.route);\n          }\n          else{\n            props.setUserName(response.username);\n            navigate(response.route);\n          }\n           }\n\n    useEffect(() =>{\n        beforeLoad();\n      },[]);\n    \n    return ( \n      <React.Fragment>\n        <nav className={'navbar navbar-dark bg-dark fixed-top flex ortalamenu'+Menustyle.shadow}>\n            <h1 className={Menustyle.white}>{\"Welcome \"+props.username}</h1>\n          <div className={Menustyle.opened}>\n            <button type=\"button\" className='btn btn-success' id={Menustyle.buttons}>Your Writings</button>\n            <button type=\"button\" className='btn btn-success' id={Menustyle.buttons}>All Writings</button>\n            <button type=\"button\" className='btn btn-success' id={Menustyle.buttons}>Public Chat</button>\n            <button type=\"button\" className='btn btn-success' id={Menustyle.buttons}>Log-Out</button>         \n            </div>\n            </nav>\n            </React.Fragment>\n    );\n   \n}\nconst mapStateToProps = (state)=>{\n  return{\n    username:state.username\n  }\n}\nconst mapDispatchToProps = (dispatch) =>{\n  return{\n    setUserName: (username) =>{ dispatch({'type':'SET_NAME',username})}\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps) (Menu);"]},"metadata":{},"sourceType":"module"}