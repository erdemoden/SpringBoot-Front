{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\nimport invariant from '../utils/invariant';\nimport NavigationContext from './NavigationContext';\nexport default function withNavigation(Component) {\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    forwardRef: true\n  };\n\n  class ComponentWithNavigation extends React.Component {\n    render() {\n      const navigationProp = this.props.navigation;\n      return /*#__PURE__*/React.createElement(NavigationContext.Consumer, null, navigationContext => {\n        const navigation = navigationProp || navigationContext;\n        invariant(!!navigation, 'withNavigation can only be used on a view hierarchy of a navigator. The wrapped component is unable to get access to navigation from props or context.');\n        return /*#__PURE__*/React.createElement(Component, _extends({}, this.props, {\n          navigation: navigation,\n          ref: config.forwardRef ? this.props.onRef : undefined\n        }));\n      });\n    }\n\n  }\n\n  _defineProperty(ComponentWithNavigation, \"displayName\", \"withNavigation(\".concat(Component.displayName || Component.name, \")\"));\n\n  return hoistStatics(ComponentWithNavigation, Component);\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,eAAe,SAASC,cAAT,CACbC,SADa,EAGb;AAAA,MADAC,MACA,uEADS;AAAEC,cAAU,EAAE;AAAd,GACT;;AACA,QAAMC,uBAAN,SAAsCR,KAAK,CAACK,SAA5C,CAAsD;AAKpDI,UAAM,GAAG;AACP,YAAMC,cAAc,GAAG,KAAKC,KAAL,CAAWC,UAAlC;AACA,0BACEZ,oBAACG,iBAAD,CAAmBU,QAAnB,QACIC,iBAAD,IAAuB;AACtB,cAAMF,UAAU,GAAGF,cAAc,IAAII,iBAArC;AACAZ,iBAAS,CACP,CAAC,CAACU,UADK,EAEP,wJAFO,CAATV;AAIA,4BACEF,oBAACK,SAAD,eACM,KAAKM,KADX;AAEEC,oBAAU,EAAEA,UAFd;AAGEG,aAAG,EAAET,MAAM,CAACC,UAAPD,GAAoB,KAAKK,KAAL,CAAWK,KAA/BV,GAAuCW;AAH9C,WADF;AAPJ,QADF;AAkBD;;AAzBmD;;AADtDC,kBACMV,uBADN,0CAGIH,SAAS,CAACc,WAAVd,IAAyBA,SAAS,CAACe,IAHvC;;AA6BA,SAAOnB,YAAY,CAACO,uBAAD,EAA0BH,SAA1B,CAAnB;AACD","names":["React","hoistStatics","invariant","NavigationContext","withNavigation","Component","config","forwardRef","ComponentWithNavigation","render","navigationProp","props","navigation","Consumer","navigationContext","ref","onRef","undefined","_defineProperty","displayName","name"],"sources":["/Users/erdemoden/Desktop/React-js/blog-app/node_modules/@react-navigation/core/lib/module/views/withNavigation.js"],"sourcesContent":["import * as React from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\nimport invariant from '../utils/invariant';\nimport NavigationContext from './NavigationContext';\n\nexport default function withNavigation(\n  Component,\n  config = { forwardRef: true }\n) {\n  class ComponentWithNavigation extends React.Component {\n    static displayName = `withNavigation(${\n      Component.displayName || Component.name\n    })`;\n\n    render() {\n      const navigationProp = this.props.navigation;\n      return (\n        <NavigationContext.Consumer>\n          {(navigationContext) => {\n            const navigation = navigationProp || navigationContext;\n            invariant(\n              !!navigation,\n              'withNavigation can only be used on a view hierarchy of a navigator. The wrapped component is unable to get access to navigation from props or context.'\n            );\n            return (\n              <Component\n                {...this.props}\n                navigation={navigation}\n                ref={config.forwardRef ? this.props.onRef : undefined}\n              />\n            );\n          }}\n        </NavigationContext.Consumer>\n      );\n    }\n  }\n\n  return hoistStatics(ComponentWithNavigation, Component);\n}\n"]},"metadata":{},"sourceType":"module"}