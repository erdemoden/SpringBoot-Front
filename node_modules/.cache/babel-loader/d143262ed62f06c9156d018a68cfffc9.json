{"ast":null,"code":"// Action constants\nexport const BACK = 'Navigation/BACK';\nexport const INIT = 'Navigation/INIT';\nexport const NAVIGATE = 'Navigation/NAVIGATE';\nexport const SET_PARAMS = 'Navigation/SET_PARAMS'; // Action creators\n\nexport const back = function () {\n  let payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    type: BACK,\n    key: payload.key,\n    immediate: payload.immediate\n  };\n};\nexport const init = function () {\n  let payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const action = {\n    type: INIT\n  };\n\n  if (payload.params) {\n    action.params = payload.params;\n  }\n\n  return action;\n};\nexport const navigate = payload => {\n  const action = {\n    type: NAVIGATE,\n    routeName: payload.routeName\n  };\n\n  if (payload.params) {\n    action.params = payload.params;\n  }\n\n  if (payload.action) {\n    action.action = payload.action;\n  }\n\n  if (payload.key) {\n    action.key = payload.key;\n  }\n\n  return action;\n};\nexport const setParams = payload => ({\n  type: SET_PARAMS,\n  key: payload.key,\n  params: payload.params,\n  preserveFocus: true\n});","map":{"version":3,"mappings":"AAkDA;AACA,OAAO,MAAMA,IAAI,GAAG,iBAAb;AACP,OAAO,MAAMC,IAAI,GAAG,iBAAb;AACP,OAAO,MAAMC,QAAQ,GAAG,qBAAjB;AACP,OAAO,MAAMC,UAAU,GAAG,uBAAnB,C,CAEP;;AACA,OAAO,MAAMC,IAAI,GAAG;AAAA,MAClBC,OADkB,uEACqB,EADrB;AAAA,SAEQ;AAC1BC,QAAI,EAAEN,IADoB;AAE1BO,OAAG,EAAEF,OAAO,CAACE,GAFa;AAG1BC,aAAS,EAAEH,OAAO,CAACG;AAHO,GAFR;AAAA,CAAb;AAQP,OAAO,MAAMC,IAAI,GAAG,YAA+C;AAAA,MAA9CJ,OAA8C,uEAAP,EAAO;AACjE,QAAMK,MAA4B,GAAG;AACnCJ,QAAI,EAAEL;AAD6B,GAArC;;AAGA,MAAII,OAAO,CAACM,MAAZ,EAAoB;AAClBD,UAAM,CAACC,MAAPD,GAAgBL,OAAO,CAACM,MAAxBD;AACD;;AACD,SAAOA,MAAP;AAPK;AAUP,OAAO,MAAME,QAAQ,GACnBP,OADsB,IAEO;AAC7B,QAAMK,MAAgC,GAAG;AACvCJ,QAAI,EAAEJ,QADiC;AAEvCW,aAAS,EAAER,OAAO,CAACQ;AAFoB,GAAzC;;AAIA,MAAIR,OAAO,CAACM,MAAZ,EAAoB;AAClBD,UAAM,CAACC,MAAPD,GAAgBL,OAAO,CAACM,MAAxBD;AACD;;AACD,MAAIL,OAAO,CAACK,MAAZ,EAAoB;AAClBA,UAAM,CAACA,MAAPA,GAAgBL,OAAO,CAACK,MAAxBA;AACD;;AACD,MAAIL,OAAO,CAACE,GAAZ,EAAiB;AACfG,UAAM,CAACH,GAAPG,GAAaL,OAAO,CAACE,GAArBG;AACD;;AACD,SAAOA,MAAP;AAhBK;AAmBP,OAAO,MAAMI,SAAS,GACpBT,OADuB,KAEQ;AAC/BC,MAAI,EAAEH,UADyB;AAE/BI,KAAG,EAAEF,OAAO,CAACE,GAFkB;AAG/BI,QAAM,EAAEN,OAAO,CAACM,MAHe;AAI/BI,eAAa,EAAE;AAJgB,CAFR,CAAlB","names":["BACK","INIT","NAVIGATE","SET_PARAMS","back","payload","type","key","immediate","init","action","params","navigate","routeName","setParams","preserveFocus"],"sources":["/Users/erdemoden/Desktop/React-js/blog-app/node_modules/@react-navigation/core/lib/module/NavigationActions.ts"],"sourcesContent":["export interface NavigationParams {\n  [key: string]: any;\n}\n\nexport interface NavigationNavigateActionPayload {\n  routeName: string;\n  params?: NavigationParams;\n\n  // The action to run inside the sub-router\n  action?: NavigationNavigateAction;\n\n  key?: string;\n}\n\nexport interface NavigationNavigateAction\n  extends NavigationNavigateActionPayload {\n  type: 'Navigation/NAVIGATE';\n}\n\nexport interface NavigationBackActionPayload {\n  key?: string | null;\n  immediate?: boolean;\n}\n\nexport interface NavigationBackAction extends NavigationBackActionPayload {\n  type: 'Navigation/BACK';\n}\n\nexport interface NavigationInitActionPayload {\n  params?: NavigationParams;\n}\n\nexport interface NavigationInitAction extends NavigationInitActionPayload {\n  type: 'Navigation/INIT';\n}\n\nexport interface NavigationSetParamsActionPayload {\n  // The key of the route where the params should be set\n  key: string;\n\n  // The new params to merge into the existing route params\n  params?: NavigationParams;\n}\n\nexport interface NavigationSetParamsAction\n  extends NavigationSetParamsActionPayload {\n  type: 'Navigation/SET_PARAMS';\n  preserveFocus: true;\n}\n\n// Action constants\nexport const BACK = 'Navigation/BACK';\nexport const INIT = 'Navigation/INIT';\nexport const NAVIGATE = 'Navigation/NAVIGATE';\nexport const SET_PARAMS = 'Navigation/SET_PARAMS';\n\n// Action creators\nexport const back = (\n  payload: NavigationBackActionPayload = {}\n): NavigationBackAction => ({\n  type: BACK,\n  key: payload.key,\n  immediate: payload.immediate,\n});\n\nexport const init = (payload: NavigationInitActionPayload = {}) => {\n  const action: NavigationInitAction = {\n    type: INIT,\n  };\n  if (payload.params) {\n    action.params = payload.params;\n  }\n  return action;\n};\n\nexport const navigate = (\n  payload: NavigationNavigateActionPayload\n): NavigationNavigateAction => {\n  const action: NavigationNavigateAction = {\n    type: NAVIGATE,\n    routeName: payload.routeName,\n  };\n  if (payload.params) {\n    action.params = payload.params;\n  }\n  if (payload.action) {\n    action.action = payload.action;\n  }\n  if (payload.key) {\n    action.key = payload.key;\n  }\n  return action;\n};\n\nexport const setParams = (\n  payload: NavigationSetParamsActionPayload\n): NavigationSetParamsAction => ({\n  type: SET_PARAMS,\n  key: payload.key,\n  params: payload.params,\n  preserveFocus: true,\n});\n"]},"metadata":{},"sourceType":"module"}