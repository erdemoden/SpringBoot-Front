[{"/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/index.js":"1","/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/App.js":"2","/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/reportWebVitals.js":"3","/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Reducer/rootReducer.js":"4","/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Components/Menu.js":"5","/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Components/Login.js":"6","/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Components/Create-Post.js":"7","/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Components/Nav.js":"8","/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Services/HttpServices.js":"9","/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Components/SideMenu.js":"10","/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Components/ProfileScreen.js":"11","/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Services/UserPrefs.js":"12","/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Components/Create-Blog.js":"13","/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Services/BlogService.js":"14","/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Components/Blog.js":"15"},{"size":1119,"mtime":1679674359687,"results":"16","hashOfConfig":"17"},{"size":972,"mtime":1679780269539,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1646510730123,"results":"19","hashOfConfig":"17"},{"size":941,"mtime":1679327996677,"results":"20","hashOfConfig":"17"},{"size":2346,"mtime":1679847973552,"results":"21","hashOfConfig":"17"},{"size":9486,"mtime":1679951968265,"results":"22","hashOfConfig":"17"},{"size":1551,"mtime":1678132699506,"results":"23","hashOfConfig":"17"},{"size":2612,"mtime":1679847971553,"results":"24","hashOfConfig":"17"},{"size":1662,"mtime":1677944308537,"results":"25","hashOfConfig":"17"},{"size":2295,"mtime":1679847967347,"results":"26","hashOfConfig":"17"},{"size":3977,"mtime":1679847969818,"results":"27","hashOfConfig":"17"},{"size":321,"mtime":1677944310062,"results":"28","hashOfConfig":"17"},{"size":2223,"mtime":1679847775552,"results":"29","hashOfConfig":"17"},{"size":611,"mtime":1679319879419,"results":"30","hashOfConfig":"17"},{"size":1358,"mtime":1680122508949,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"ie2sa4",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},"/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/index.js",["89"],[],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './Reducer/rootReducer';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { encryptTransform } from 'redux-persist-transform-encrypt';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'persist',\n  storage,\n  transforms:[\n    encryptTransform({\n      secretKey:\"Deneme\",\n      onError:function(error){\n          localStorage.clear();\n          persistor.purge();\n          window.location.reload(true);\n      },\n    }),\n  ],\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\nconst store = createStore(persistedReducer);\nlet persistor = persistStore(store)\nReactDOM.render(\n   <Provider store = {store}> <PersistGate loading={null} persistor={persistor}><App /></PersistGate></Provider> \n  ,\n  document.getElementById('root')\n);\n\n","/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/App.js",["90","91","92"],[],"import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport Menu from './Components/Menu';\nimport Login from './Components/Login';\nimport { BrowserRouter, Route, Routes,useNavigate } from 'react-router-dom';\nimport ProfileScreen from './Components/ProfileScreen';\nimport Create_Post from './Components/Create-Post';\nimport CreateBlog from './Components/Create-Blog';\nimport Blog from './Components/Blog';\nclass App extends React.Component {\n render(){\n  return (\n    <BrowserRouter>\n    <Routes>\n      <Route path='/' element = {<Login title = 'Login' message = \"Don't have Account \" button = \"Click Here\"/>}/>\n    <Route path='/homepage' element={<Menu/>} />\n    <Route path='/profile' element={<ProfileScreen/>}/>\n    <Route path='/create-post' element={<Create_Post/>}/>\n    <Route path='/create-blog' element={<CreateBlog/>}/>\n    <Route path='/blog' element={<Blog/>}></Route>\n    </Routes>\n    </BrowserRouter>\n  );\n}\n}\n\nexport default App;\n","/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/reportWebVitals.js",[],[],"/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Reducer/rootReducer.js",["93"],[],"const initialState = {\n    allposts:[],\n    username:\"\",\n    screen:1,\n    userpicpath:\"\",\n    jwtsession:\"\",\n    followedblogs:[],\n}\n\n\nconst rootReducer = (state = initialState,action)=>{\n\n    switch(action.type){\n        case 'SET_NAME':\n            return{\n                ...state,\n                username:action.username\n            }\n        case 'SET_SCREEN':\n            return{\n                ...state,\n                screen:action.screen\n            }\n        case 'SET_USERPIC':\n            return{\n                ...state,\n                userpicpath:action.userpicpath\n            }\n        case 'SET_JWTSESSION':\n            return{\n                ...state,\n                jwtsession:action.jwtsession\n            }\n        case 'SET_FOLLOWEDBLOGS':\n            return{\n                ...state,\n                followedblogs:action.followedblogs\n            }\n    }\n    \n    return state;\n}\n\n\nexport default rootReducer;","/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Components/Menu.js",["94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115"],[],"import React from 'react';\nimport { useEffect, useState } from \"react\";\nimport Menustyle from'../Styles/Menu.module.css'\nimport {useNavigate,useLocation} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {GetWithAuth ,GetWithRefresh} from '../Services/HttpServices';\nimport { Bounce,Fade, Flip, Roll, Rotate, Slide, Zoom} from 'react-reveal';\nimport { AnimatePresence, motion, useViewportScroll} from 'framer-motion';\nimport { Parallax,ParallaxProvider,ParallaxBanner } from 'react-scroll-parallax';\nimport backgroundImage from \"../Images/arkaplan-resim.jpg\";\nimport Swal from 'sweetalert2';\nimport Create_Post from './Create-Post';\nimport Nav from './Nav';\nconst axios = require('axios');\nlet rotation = 0;\nconst Menu = (props)=>{\n    const navigate = useNavigate();\n    const location = useLocation();\n    const {scrollYProgress} = useViewportScroll();\n    console.log(scrollYProgress);\n        const beforeLoad = async()=>{\n          console.log(props.username);\n          let response = await GetWithAuth(`${process.env.REACT_APP_ROOT_URL}/auth/route`,\"/homepage\",props.jwtsession);\n          if(response.route == \"/\"){\n          props.setJwtSession(\"\");\n          //localStorage.removeItem(\"jwtsession\");\n          navigate(response.route);\n          }\n          else{\n            props.setUserName(response.username);\n            props.setUserPicPath(response.location);\n            document.body.className = Menustyle.deneme;\n            //document.getElementById(\"background\").className = Menustyle.backwithoutscroll;\n            console.log(response.route);\n            navigate(response.route);\n          }\n           }\n\n    useEffect(() =>{\n        beforeLoad();\n      },[]);\n    return ( \n      <React.Fragment>\n        <Nav username={props.username}/>\n        </React.Fragment>           \n    );\n}\n\nconst mapStateToProps = (state)=>{\n  return{\n    username:state.username,\n    jwtsession:state.jwtsession,\n    userpicpath:state.userpicpath\n  }\n}\nconst mapDispatchToProps = (dispatch) =>{\n  return{\n    setUserName: (username) =>{ dispatch({'type':'SET_NAME',username})},\n    setJwtSession: (jwtsession) =>{ dispatch({'type':'SET_JWTSESSION',jwtsession})},\n    setUserPicPath:(userpicpath) =>{ dispatch({'type':'SET_USERPIC',userpicpath})}\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps) (Menu);","/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Components/Login.js",["116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132"],[],"import background from'../Styles/Background.module.css'\nimport formdesign from'../Styles/FormDesign.module.css'\nimport Bounce from 'react-reveal/Bounce';\nimport cookies from 'js-cookie'\nimport Menustyle from'../Styles/Menu.module.css'\nimport {useNavigate} from 'react-router-dom';\nimport { useState ,useEffect } from 'react';\nimport swal from 'sweetalert';\nimport Swal from 'sweetalert2'\nimport { connect } from 'react-redux';\nimport {GetWithAuth ,GetWithRefresh,beforeRegister,registerWithMail, beforeLogin} from '../Services/HttpServices';\nlet number = 1;\nconst Login  = (props)=>{\n  const navigate = useNavigate();\n  const [allState,setAllState] = useState({\n    title:props.title,\n    message:props.message,\n    button:props.button,\n    show:true\n  });\n   const beforeLoad = async ()=>{ \n    console.log(process.env.REACT_APP_ROOT_URL);\n    let response = await GetWithAuth(`${process.env.REACT_APP_ROOT_URL}/auth/route`,\"/homepage\",props.jwtsession);\n    if(response.route == \"/\"){\n      document.body.className = background.deneme;\n      props.setJwtSession(\"\");\n      //localStorage.removeItem(\"jwtsession\");\n    }\n    else{\n      document.body.className = Menustyle.deneme;\n    }\n    navigate(response.route);\n     }\n      const handleClick = ()=>{\n          if(allState.show === false && number === 1){\n              setAllState({show:true,message:\"Have Account ?\",title:\"Sign-Up\"});\n            }\n          else if(allState.show === false && number === 2){\n            setAllState({show:true,message:\"Don't Have Account ?\",title:\"Login\"});\n          }\n          \n      }\n      const submit = async()=>{\n        if(document.getElementById(\"password\").value.trim().length ==0){\n          swal({\n            title: \"Password Field Is Required!\",\n            text: \"Please Write Your Password\",\n            icon: \"error\",\n            button: \"Close This Alert\",\n          });\n        }\n        else if(document.getElementById(\"username\").value.trim().length ==0){\n          swal({\n            title: \"Username Field Is Required!\",\n            text: \"Please Write Your Username\",\n            icon: \"error\",\n            button: \"Close This Alert\",\n          });\n        }\n        else if(document.getElementById(\"username\").value.trim().length >=15&&allState.title!=\"Login\"){\n          swal({\n            title: \"Username Can Not More Than 15 Characters\",\n            text: \"Please Try Another Username\",\n            icon: \"error\",\n            button: \"Close This Alert\",\n          });\n         }\n       else if(document.getElementById(\"email\")!=null && document.getElementById(\"email\").value.trim().length ==0){\n        swal({\n          title: \"E-Mail Field Is Required!\",\n          text: \"Please Write Your E-Mail\",\n          icon: \"error\",\n          button: \"Close This Alert\",\n        });\n     \n       }\n         else if(allState.title === \"Sign-Up\"){\n          let postres = await beforeRegister(`${process.env.REACT_APP_ROOT_URL}/auth/beforeregister`,document.getElementById(\"username\").value.trim(),document.getElementById(\"email\").value,document.getElementById(\"password\").value); \n          if(postres.created == true){\n             Swal.fire({\n              html:`<h1>Please Write The Code We Sent To Your Email</h1>\n              <input type=\"text\" id=\"code\" class=\"swal2-input\" placeholder=\"CODE\" style=\"width:50%;\">\n              <button id=\"send\" class=\"btn btn-success\">\n      SEND\n    </button><br/><br/>\n    You Have <strong></strong> seconds.<br/><br/>\n              `,\n              timer:90000,\n              icon: \"success\",\n              allowOutsideClick:false,\n              showCancelButton:true,\n              didOpen: ()=>{\n                const content = Swal.getHtmlContainer()\n                const $ = content.querySelector.bind(content)\n                const send = $('#send');\n                const code = $('#code');\n                send.addEventListener(\"click\",async()=>{\n                  let postres2 =  await registerWithMail(`${process.env.REACT_APP_ROOT_URL}/auth/registerwithmail`,code.value.trim().toLowerCase());\n          if(postres2.created == true){\n            props.setJwtSession(postres2.accessToken);\n            //localStorage.setItem(\"jwtsession\",postres2.accessToken);\n            navigate('/homepage');\n            Swal.close();\n          }\n          else if(postres2.created == false){\n            Swal.close();\n            swal({\n              title: postres2.error,\n              text: \"Please Check And Try Again\",\n              icon: \"error\",\n              button: \"Close This Alert\",\n            });\n          }\n              });\n                Swal.showLoading();\n                setInterval(() => {\n                  Swal.getHtmlContainer().querySelector('strong')\n                    .textContent = (Swal.getTimerLeft() / 1000)\n                      .toFixed(0)\n                }, 100)\n             \n            }})\n         }\n         else{\n          swal({\n            title: postres.error,\n            text: \"Please Check And Try Again\",\n            icon: \"error\",\n            button: \"Close This Alert\",\n          });\n         }\n        }\n         else if(allState.title === \"Login\"){\n          let postres = await beforeLogin(`${process.env.REACT_APP_ROOT_URL}/auth/beforelogin`,document.getElementById(\"username\").value.trim(),document.getElementById(\"password\").value);\n          if(postres.created == true){\n            Swal.fire({\n              html:`<h1>Please Write The Code We Sent To Your Email</h1>\n              <input type=\"text\" id=\"code\" class=\"swal2-input\" placeholder=\"CODE\" style=\"width:90%; margin-left:0px;\">\n              <button id=\"send\" class=\"btn btn-success\">\n              SEND\n              </button>\n              <button id=\"close\" class=\"btn btn-secondary\">\n      CLOSE\n    </button><br/><br/>\n    You Have <strong></strong> seconds.<br/><br/>\n              `,\n              timer:90000,\n              icon: \"success\",\n              allowOutsideClick:false,\n              didOpen: ()=>{\n                const content = Swal.getHtmlContainer()\n                const $ = content.querySelector.bind(content)\n                const send = $('#send');\n                const code = $('#code');\n                send.addEventListener(\"click\",async()=>{\n                let postres2 =  await registerWithMail(`${process.env.REACT_APP_ROOT_URL}/auth/loginwithmail`,code.value.trim().toLowerCase());\n          if(postres2.created == true){\n            props.setJwtSession(postres.accessToken.toString());\n            console.log(postres.accessToken);\n            //localStorage.setItem(\"jwtsession\",postres.accessToken);\n           navigate('/homepage');\n            Swal.close();\n          }\n          else if(postres2.created == false){\n            Swal.close();\n            swal({\n              title: postres2.error,\n              text: \"Please Check And Try Again\",\n              icon: \"error\",\n              button: \"Close This Alert\",\n            });\n          }\n              });\n                Swal.showLoading();\n                setInterval(() => {\n                  Swal.getHtmlContainer().querySelector('strong')\n                    .textContent = (Swal.getTimerLeft() / 1000)\n                      .toFixed(0)\n                }, 100)\n             \n            }})\n          }\n          else if(postres.created === false){\n            swal({\n              title: postres.error,\n              text: \"Please Check And Try Again\",\n              icon: \"error\",\n              button: \"Close This Alert\",\n            });\n            console.log(postres);\n          }\n         }\n      \n    }\n      useEffect(() =>{\n        beforeLoad();\n      },[]);\n      useEffect( ()=>{\n        setTimeout(() => {\n              if(allState.show === true && number === 1){\n                setAllState({show:false,message:\"Have Account ?\",title:\"Sign-Up\"});\n                number = 2;\n                console.log(allState.message);\n              }\n              else if(allState.show === true && number === 2){\n                setAllState({show:false,message:\"Don't Have Account ?\",title:\"Login\"});\n                number = 1;\n            }\n          }, 300);\n      },[allState]);\n        return(\n            <div>\n            <Bounce left opposite when={!allState.show}>\n            <div className={allState.title ==\"Login\" ? formdesign.formBack : formdesign.formBackSignUp}>\n                <h1 className={formdesign.Title}>{allState.title}</h1>\n                <input type=\"text\" name = \"username\" placeholder={allState.title == 'Login' ? 'Username Or Email' : 'Username'} id='username'></input>\n                {allState.title ==\"Sign-Up\" &&\n                <input type=\"text\" name = \"email\" placeholder=\"E-Mail\" id='email'></input>\n                }\n                <input type=\"password\" name = \"password\" placeholder=\"Password\" id='password'></input>\n                <input type=\"button\" value={allState.title} onClick = {submit} ></input>\n                <p>{allState.message} <span style={{color:\"blue\",cursor:\"pointer\"}} onClick = {handleClick}>Click Here</span></p>\n            </div>\n            </Bounce>\n            </div>\n           \n    );}\n    const mapStateToProps = (state)=>{\n      return{\n        jwtsession:state.jwtsession\n      }\n    }\n    const mapDispatchToProps = (dispatch) =>{\n      return{\n        setJwtSession: (jwtsession) =>{ dispatch({'type':'SET_JWTSESSION',jwtsession})}\n      }\n    }\n              \nexport default connect(mapStateToProps,mapDispatchToProps) (Login);","/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Components/Create-Post.js",["133"],[],"import React,{useRef} from 'react';\nimport CreateStyle from'../Styles/Create_R.module.css'\nimport \"../App.css\"\nimport 'react-quill/dist/quill.snow.css';\nimport ReactQuill from 'react-quill';\nimport { useState } from 'react';\nimport Nav from './Nav';\nconst Create_Post = (props)=>{\nconst [body,setBody] = useState(\"\");\nconst quillRef = useRef(null);\nconst handleBody = (e)=>{\n    setBody(e);\n    console.log(body);\n}\nreturn(\n<React.Fragment>\n<Nav username={props.username}/>\n<div className='arka'>\n<ReactQuill placeholder='Write Something You Want To Write....'\nmodules={Create_Post.modules}\nformats={Create_Post.formats}\nonChange={handleBody}\nvalue={body}\nref={quillRef}\n/>\n</div>\n<ReactQuill placeholder='Write Something You Want To Write....'\nmodules={Create_Post.module2}\nreadOnly={true}\nvalue={body}\nref={quillRef}\nstyle={{ backgroundColor: 'white', color: 'black' }}\n/>\n</React.Fragment>\n);\n}\nCreate_Post.modules = {\n    toolbar:[\n        [{header:\"1\"},{header:\"2\"},{header:[3,4,5,6]},{font:[]}],\n        [{size:[]}],\n        [\"bold\",\"italic\",\"underline\",\"strike\",\"blockquote\"],\n        [{list:\"ordered\"},{list:\"bullet\"}],\n        [\"link\",\"image\",\"video\"],\n        [\"clean\"],\n        [\"code-block\"],\n        [{ align: 'center' }]\n    ],\n};\nCreate_Post.module2 = {\n    toolbar:false\n}\nCreate_Post.formats = [\n    \"header\",\n    \"font\",\n    \"size\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"strike\",\n    \"blockquote\",\n    \"list\",\n    \"bullet\",\n    \"link\",\n    \"image\",\n    \"video\",\n    \"code-block\",\n    \"align\"\n];\n\nexport default Create_Post;","/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Components/Nav.js",["134","135","136","137","138","139","140","141","142"],[],"import React from 'react';\nimport { motion,useViewportScroll } from \"framer-motion\"\nimport { useEffect,useState } from \"react\";\nimport { Bounce,Fade, Flip, Reveal, Roll, Rotate, Slide, Zoom} from 'react-reveal';\nimport Menustyle from'../Styles/Menu.module.css'\nimport SideMenu from './SideMenu';\nimport { connect } from 'react-redux';\nconst Nav = (props)=>{\nconst [myslide,setmyslide] = useState(\n        {\n          isanimated:false\n        }\n      );\n      const [hidden, setHidden] = useState(false);\n      const variants = {\n        visible: { opacity: 1, y: 0 },\n        hidden: { opacity: 0, y: -85 }\n      };\n      const variants2 = {\n        open: {\n          clipPath: \"inset(0% 0% 0% 0% round 10px)\",\n          transition: {\n            type: \"spring\",\n            bounce: 0,\n            duration: 0.7,\n            delayChildren: 0.3,\n            staggerChildren: 0.05\n          }\n        },\n        closed: {\n          clipPath: \"inset(10% 50% 90% 50% round 10px)\",\n          transition: {\n            type: \"spring\",\n            bounce: 0,\n            duration: 0.3\n          }\n        }\n      }\nconst {scrollY} = useViewportScroll();\nuseEffect(()=>{\n    return scrollY.onChange(()=>update());\n})\nfunction update(){\nif(scrollY.current<=20/*scrollY.current<scrollY.prev*/){\nsetHidden(false);\n}\nelse if(scrollY.current > 30 && scrollY.current > scrollY.prev){\n    setHidden(true);\n}\n}\nconst rotateAndOpen = ()=>{\n    if(myslide.isanimated == false){\n    setmyslide({isanimated:true});\n  document.body.style.overflow = \"hidden\";\n    }\n    else{\n      setmyslide({isanimated:false});\n    document.body.style.overflow = \"\";\n    }\n  }\nreturn(\n    <React.Fragment>\n    <motion.div style={{width:\"100%\",height:\"200px\",backgroundColor:'black',borderRadius:'0px 0px 30px 30px'}} variants={variants} animate={hidden ? 'hidden':'visible'} transition={{ ease: [0.1, 0.25, 0.3, 1], duration: 0.6 }}></motion.div>\n    <nav className={Menustyle.menu}>\n      <Bounce left delay={200}>\n      <div className ={Menustyle.bouncelogo}>\n      <div className={Menustyle.logo}/>\n      <div className={Menustyle.appname}></div>\n      </div>\n      </Bounce>\n        <motion.div className={Menustyle.hamburger}onClick={rotateAndOpen} id = \"hamburgerim\" animate={{transform:myslide.isanimated ? \"rotate(90deg)\":\"rotate(0deg)\"}}>\n        </motion.div>\n        </nav>\n        <SideMenu side={myslide.isanimated}/>\n        </React.Fragment>\n);\n\n}\nconst mapDispatchToProps = dispatch=>{\n\n}\nconst mapStateToProps = (state)=>{\n  return{\n    username:state.username\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(Nav);","/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Services/HttpServices.js",["143"],[],"//import { json } from \"express/lib/response\";\nimport cookies from 'js-cookie'\n\nexport const PostWithAuth = async(url,body,jwtsession)=>{\nvar request = await fetch(url,{\nmethod:'POST',\nheaders:{\n    \"Content-Type\":\"application/json\",\n    \"Authorization\":jwtsession\n},\nbody:JSON.stringify(body)\n\n});\nreturn request;\n}\n export const GetWithAuth = async(url,route,jwtsession)=>{\n   const response = await fetch(url,{\n        method:'GET',\n        withCredentials:true,\n        headers:{\n            \"Content-Type\":\"application/json\",\n            \"Authorization\":jwtsession,\n            \"Route\":route\n        }\n    });\n    console.log(jwtsession);\n    return await response.json();\n}\n\nexport const beforeRegister = async(url,username,email,password)=>{\n    const response = await fetch(url,{\n        method:'POST',\n        headers:{\n            'Content-Type': 'application/json'\n          },\n           credentials:'include',\n          body: JSON.stringify({username:username, email:email,password:password})\n    });\n    return await response.json();\n}\n\nexport const registerWithMail = async(url,code)=>{\nconst response = await fetch(url,{\n    method:'POST',\n    headers:{\n        'Content-Type': 'application/json'\n    },\n    credentials:'include',\n    body: JSON.stringify({key:code})\n});\nreturn await response.json();\n}\nexport const beforeLogin = async(url,username,password)=>{\n    const response = await fetch(url,{\n        method:'POST',\n        headers:{\n            'Content-Type': 'application/json'\n        },\n        credentials:'include',\n        body: JSON.stringify({mailOrEmail:username,password:password})\n    });\n    return await response.json();\n}","/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Components/SideMenu.js",["144","145"],[],"import { motion,useViewportScroll } from \"framer-motion\"\nimport Menustyle from'../Styles/Menu.module.css'\nimport { connect } from 'react-redux';\nimport {useNavigate,useLocation} from 'react-router-dom';\nconst SideMenu = (props)=>{\n    const navigate = useNavigate();\n    return(\n    <motion.div className = {Menustyle.sidemenu} initial = {{transform:\"translate(170%)\"}}animate={{transform: props.side ?\"translate(20px)\":\"translate(170%)\" }}>\n        <motion.div style ={{backgroundImage:`url(${process.env.REACT_APP_ROOT_URL}/user/getphoto?location=${props.userpicpath})`}} className={`${Menustyle.userphoto} ${Menustyle.flexitems}`}whileHover={{scale:1.1}} whileTap={{scale:0.9}} onClick={()=>{document.body.style.overflow = \"\"; navigate(\"/profile\")}}></motion.div>\n        <h5 className={Menustyle.flexitems}>{props.username.toUpperCase()}</h5>\n        <div className={Menustyle.sidescroll}>\n        <motion.button whileHover={{scale:1.1}} whileTap={{scale:0.9}} className=\"btn btn-outline-dark\" style={{marginTop:30,borderWidth:3,fontWeight:'bolder'}} onClick={()=>{document.body.style.overflow = \"\"; navigate(\"/homepage\")}}>Home Page</motion.button>\n        <motion.button whileHover={{scale:1.1}} whileTap={{scale:0.9}} className=\"btn btn-outline-dark\" style={{marginTop:30,borderWidth:3,fontWeight:'bolder'}} onClick={()=>{navigate(\"/create-post\")}}>Create Post</motion.button>\n        <motion.button whileHover={{scale:1.1}} whileTap={{scale:0.9}} className=\"btn btn-outline-dark\" style={{marginTop:30,borderWidth:3,fontWeight:'bolder'}}>Communities</motion.button>\n        <motion.button whileHover={{scale:1.1}} whileTap={{scale:0.9}} className=\"btn btn-outline-dark\" style={{marginTop:30,borderWidth:3,fontWeight:'bolder'}} onClick={()=>{navigate(\"/create-blog\")}}>Create Community</motion.button>\n        </div>\n        <motion.button whileHover={{scale:1.1}} whileTap={{scale:0.9}} className=\"btn btn-outline-dark\" style={{justifySelf:'flex-end',borderWidth:3,fontWeight:'bolder',marginTop:3}}>Log-Out</motion.button>\n    </motion.div>\n    );\n}\nconst mapDispatchToProps = dispatch=>{\n   \n}\nconst mapStateToProps = state=>{\n    return{\n        username:state.username,\n        userpicpath:state.userpicpath\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(SideMenu);","/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Components/ProfileScreen.js",["146","147","148","149","150"],[],"import React from 'react';\nimport { motion,useViewportScroll } from \"framer-motion\"\nimport {useNavigate} from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport Design from '../Styles/ProfileScreen.module.css';\nimport {GetWithAuth} from '../Services/HttpServices';\nimport { uploadPhoto,getUserPhoto } from '../Services/UserPrefs';\nimport { connect } from 'react-redux';\nimport Nav from './Nav';\nimport swal from 'sweetalert';\nconst ProfileScreen = (props)=>{\n    const navigate = useNavigate();\n    const beforeLoad = async()=>{\n        console.log(props.username);\n        let response = await GetWithAuth(`${process.env.REACT_APP_ROOT_URL}/auth/route`,\"/profile\",props.jwtsession);\n        if(response.route == \"/\"){\n        //localStorage.removeItem(\"jwtsession\");\n        props.setJwtSession(\"\");\n        navigate(response.route);\n        }\n        else{\n          navigate(response.route);\n        }\n        console.log(props.userpicpath);\n         }\n  useEffect(() =>{\n      beforeLoad();\n    },[]);\n    const uploadFile = async ()=>{\n      const choose = document.getElementById(\"choose\");\n      choose.click();\n      choose.addEventListener(\"change\",async()=>{\n      const formData = new FormData();\n      formData.append(\"userpic\",choose.files[0]);\n      console.log(formData);\n      let response = await uploadPhoto(`${process.env.REACT_APP_ROOT_URL}/user/userpic`,formData,props.jwtsession);\n        if(response.error !=null){\n          swal({\n            title: response.error,\n            text: \"Please Try After Some Time\",\n            icon: \"error\",\n            button: \"Close This Alert\",\n          });\n        }\n        else{\n            props.setPhoto(response.picPath);\n            //let url = getUserPhoto(\"http://192.168.0.18:1998/user/getphoto?location=\",picPath);\n            //document.getElementById(\"userphoto\").style.backgroundImage = `url(http://192.168.0.17:1998/user/getphoto?location=${props.userpicpath})`;\n        }\n      });\n    }\n    return(\n        <React.Fragment>\n        <Nav username={props.username}/>\n        <motion.div className={Design.image} id= \"userphoto\" whileHover={{scale:1.1}} whileTap={{scale:0.9}} onClick={uploadFile} style={{backgroundImage:`url(${process.env.REACT_APP_ROOT_URL}/user/getphoto?location=${props.userpicpath})`}}/>\n        <input id='choose' type='file' style={{display:'none'}}/>\n        <div className={Design.flexs}>\n        <div className={Design.flex}>\n        <motion.button whileHover={{scale:1.1}} whileTap={{scale:0.9}} className=\"btn btn-outline-dark\" style={{marginTop:30,borderWidth:3,fontWeight:'bolder',display:'inline-block'}}>Posts</motion.button>\n        <motion.button whileHover={{scale:1.1}} whileTap={{scale:0.9}} className=\"btn btn-outline-dark\" style={{marginTop:30,borderWidth:3,fontWeight:'bolder',display:'inline-block'}}>Likes</motion.button>\n        <motion.button whileHover={{scale:1.1}} whileTap={{scale:0.9}} className=\"btn btn-outline-dark\" style={{marginTop:30,borderWidth:3,fontWeight:'bolder',display:'inline-block'}}>Comments</motion.button>\n        <motion.button whileHover={{scale:1.1}} whileTap={{scale:0.9}} className=\"btn btn-outline-dark\" style={{marginTop:30,borderWidth:3,fontWeight:'bolder',display:'inline-block'}}>Change Image</motion.button>\n        <motion.button whileHover={{scale:1.1}} whileTap={{scale:0.9}} className=\"btn btn-outline-dark\" style={{marginTop:30,borderWidth:3,fontWeight:'bolder',display:'inline-block'}}>30 Minute Block</motion.button>\n        </div>\n        </div>\n        </React.Fragment>\n    );\n}\nconst mapStateToProps = (state)=>{\n  return{\n    userpicpath:state.userpicpath,\n    jwtsession:state.jwtsession\n  }\n}\nconst mapDispatchToProps = (dispatch) =>{\n  return{\n    setPhoto: (userpicpath) =>{dispatch({'type':'SET_USERPIC',userpicpath})},\n    setJwtSession: (jwtsession) => (dispatch({'type':'SET_JWTSESSION',jwtsession}))\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(ProfileScreen);","/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Services/UserPrefs.js",[],[],"/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Components/Create-Blog.js",[],[],"/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Services/BlogService.js",["151"],[],"\nexport const CreateNewBlog = async (url,title,subject,jwtsession)=>{\n  \n    let response = await fetch(url,{\n        method:\"POST\",\n        body:JSON.stringify({\n            title:title,\n            subject:subject\n        }),\n        credentials:'include',\n        headers:{\n            \"Content-Type\":\"application/json\",\n            \"Authorization\":jwtsession,\n        }\n    });\n    return await response.json();\n}\n\nexport const GetBlogsByUserId = async (url,jwtsession)=>{\n    let request = await fetch(url,{\n        method:\"GET\",\n        headers:{\n            \"Authorization\":jwtsession\n        }\n    });\n}","/Users/erdemoden/Desktop/React-js/Spring-Blog-Front/src/Components/Blog.js",["152","153","154"],[],"import React, { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport style from \"../Styles/BlogPage.module.css\";\nimport Nav from './Nav';\nimport { Fade,Bounce } from \"react-reveal\";\nconst Blog = ()=>{\n    const location = useLocation();\n    const [bounce,setBounce] = useState(false);\n    const subjectClicked = ()=>{\n        if(bounce == false){\n        setBounce(true);\n        }\n        else{\n        setBounce(false);\n        }\n    }\n    return(\n        <React.Fragment>\n        <Nav/>\n        <div>\n        <Bounce left>\n        <div className={style.nav}>\n            <div className={style.title}>\n                <p className={style.titlecontent}>Blog: derglsenfledjse</p>\n                <div className={style.buttons}>\n                <button className={`btn btn-sm btn-outline-dark ${style.follow}`}>Follow</button>\n                <button className={`btn btn-sm btn-outline-danger ${style.subject}`} onClick={subjectClicked}>Subject</button>\n                </div>\n            </div>\n        </div>\n        </Bounce>\n            <Bounce top duration={500} delay={0} when={bounce}>\n            <div className={style.subjectinside}>\n                <p className={style.subjectwriting}>aasdasdadqwdd2qwDASDS</p>\n            </div>\n            </Bounce>\n        </div>\n        </React.Fragment>\n    );\n}\nexport default Blog;",{"ruleId":"155","severity":1,"message":"156","line":5,"column":8,"nodeType":"157","messageId":"158","endLine":5,"endColumn":23},{"ruleId":"155","severity":1,"message":"159","line":1,"column":8,"nodeType":"157","messageId":"158","endLine":1,"endColumn":12},{"ruleId":"155","severity":1,"message":"160","line":6,"column":39,"nodeType":"157","messageId":"158","endLine":6,"endColumn":50},{"ruleId":"161","severity":1,"message":"162","line":19,"column":41,"nodeType":"163","messageId":"164","endLine":19,"endColumn":55},{"ruleId":"165","severity":1,"message":"166","line":13,"column":5,"nodeType":"167","messageId":"168","endLine":39,"endColumn":6},{"ruleId":"155","severity":1,"message":"169","line":2,"column":21,"nodeType":"157","messageId":"158","endLine":2,"endColumn":29},{"ruleId":"155","severity":1,"message":"170","line":6,"column":22,"nodeType":"157","messageId":"158","endLine":6,"endColumn":36},{"ruleId":"155","severity":1,"message":"171","line":7,"column":10,"nodeType":"157","messageId":"158","endLine":7,"endColumn":16},{"ruleId":"155","severity":1,"message":"172","line":7,"column":17,"nodeType":"157","messageId":"158","endLine":7,"endColumn":21},{"ruleId":"155","severity":1,"message":"173","line":7,"column":23,"nodeType":"157","messageId":"158","endLine":7,"endColumn":27},{"ruleId":"155","severity":1,"message":"174","line":7,"column":29,"nodeType":"157","messageId":"158","endLine":7,"endColumn":33},{"ruleId":"155","severity":1,"message":"175","line":7,"column":35,"nodeType":"157","messageId":"158","endLine":7,"endColumn":41},{"ruleId":"155","severity":1,"message":"176","line":7,"column":43,"nodeType":"157","messageId":"158","endLine":7,"endColumn":48},{"ruleId":"155","severity":1,"message":"177","line":7,"column":50,"nodeType":"157","messageId":"158","endLine":7,"endColumn":54},{"ruleId":"155","severity":1,"message":"178","line":8,"column":10,"nodeType":"157","messageId":"158","endLine":8,"endColumn":25},{"ruleId":"155","severity":1,"message":"179","line":8,"column":27,"nodeType":"157","messageId":"158","endLine":8,"endColumn":33},{"ruleId":"155","severity":1,"message":"180","line":9,"column":10,"nodeType":"157","messageId":"158","endLine":9,"endColumn":18},{"ruleId":"155","severity":1,"message":"181","line":9,"column":19,"nodeType":"157","messageId":"158","endLine":9,"endColumn":35},{"ruleId":"155","severity":1,"message":"182","line":9,"column":36,"nodeType":"157","messageId":"158","endLine":9,"endColumn":50},{"ruleId":"155","severity":1,"message":"183","line":10,"column":8,"nodeType":"157","messageId":"158","endLine":10,"endColumn":23},{"ruleId":"155","severity":1,"message":"184","line":11,"column":8,"nodeType":"157","messageId":"158","endLine":11,"endColumn":12},{"ruleId":"155","severity":1,"message":"185","line":12,"column":8,"nodeType":"157","messageId":"158","endLine":12,"endColumn":19},{"ruleId":"155","severity":1,"message":"186","line":14,"column":7,"nodeType":"157","messageId":"158","endLine":14,"endColumn":12},{"ruleId":"155","severity":1,"message":"187","line":15,"column":5,"nodeType":"157","messageId":"158","endLine":15,"endColumn":13},{"ruleId":"155","severity":1,"message":"188","line":18,"column":11,"nodeType":"157","messageId":"158","endLine":18,"endColumn":19},{"ruleId":"189","severity":1,"message":"190","line":24,"column":29,"nodeType":"191","messageId":"192","endLine":24,"endColumn":31},{"ruleId":"193","severity":1,"message":"194","line":41,"column":9,"nodeType":"195","endLine":41,"endColumn":11,"suggestions":"196"},{"ruleId":"155","severity":1,"message":"197","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":15},{"ruleId":"155","severity":1,"message":"170","line":11,"column":22,"nodeType":"157","messageId":"158","endLine":11,"endColumn":36},{"ruleId":"189","severity":1,"message":"190","line":24,"column":23,"nodeType":"191","messageId":"192","endLine":24,"endColumn":25},{"ruleId":"189","severity":1,"message":"190","line":44,"column":68,"nodeType":"191","messageId":"192","endLine":44,"endColumn":70},{"ruleId":"189","severity":1,"message":"190","line":52,"column":73,"nodeType":"191","messageId":"192","endLine":52,"endColumn":75},{"ruleId":"189","severity":1,"message":"198","line":60,"column":93,"nodeType":"191","messageId":"192","endLine":60,"endColumn":95},{"ruleId":"189","severity":1,"message":"190","line":68,"column":111,"nodeType":"191","messageId":"192","endLine":68,"endColumn":113},{"ruleId":"189","severity":1,"message":"190","line":79,"column":30,"nodeType":"191","messageId":"192","endLine":79,"endColumn":32},{"ruleId":"189","severity":1,"message":"190","line":99,"column":31,"nodeType":"191","messageId":"192","endLine":99,"endColumn":33},{"ruleId":"189","severity":1,"message":"190","line":105,"column":36,"nodeType":"191","messageId":"192","endLine":105,"endColumn":38},{"ruleId":"189","severity":1,"message":"190","line":135,"column":30,"nodeType":"191","messageId":"192","endLine":135,"endColumn":32},{"ruleId":"189","severity":1,"message":"190","line":157,"column":31,"nodeType":"191","messageId":"192","endLine":157,"endColumn":33},{"ruleId":"189","severity":1,"message":"190","line":164,"column":36,"nodeType":"191","messageId":"192","endLine":164,"endColumn":38},{"ruleId":"193","severity":1,"message":"194","line":197,"column":9,"nodeType":"195","endLine":197,"endColumn":11,"suggestions":"199"},{"ruleId":"189","severity":1,"message":"190","line":214,"column":44,"nodeType":"191","messageId":"192","endLine":214,"endColumn":46},{"ruleId":"189","severity":1,"message":"190","line":216,"column":82,"nodeType":"191","messageId":"192","endLine":216,"endColumn":84},{"ruleId":"189","severity":1,"message":"190","line":217,"column":33,"nodeType":"191","messageId":"192","endLine":217,"endColumn":35},{"ruleId":"155","severity":1,"message":"200","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":19},{"ruleId":"155","severity":1,"message":"172","line":4,"column":17,"nodeType":"157","messageId":"158","endLine":4,"endColumn":21},{"ruleId":"155","severity":1,"message":"173","line":4,"column":23,"nodeType":"157","messageId":"158","endLine":4,"endColumn":27},{"ruleId":"155","severity":1,"message":"201","line":4,"column":29,"nodeType":"157","messageId":"158","endLine":4,"endColumn":35},{"ruleId":"155","severity":1,"message":"174","line":4,"column":37,"nodeType":"157","messageId":"158","endLine":4,"endColumn":41},{"ruleId":"155","severity":1,"message":"175","line":4,"column":43,"nodeType":"157","messageId":"158","endLine":4,"endColumn":49},{"ruleId":"155","severity":1,"message":"176","line":4,"column":51,"nodeType":"157","messageId":"158","endLine":4,"endColumn":56},{"ruleId":"155","severity":1,"message":"177","line":4,"column":58,"nodeType":"157","messageId":"158","endLine":4,"endColumn":62},{"ruleId":"155","severity":1,"message":"202","line":19,"column":13,"nodeType":"157","messageId":"158","endLine":19,"endColumn":22},{"ruleId":"189","severity":1,"message":"190","line":52,"column":27,"nodeType":"191","messageId":"192","endLine":52,"endColumn":29},{"ruleId":"155","severity":1,"message":"197","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":15},{"ruleId":"155","severity":1,"message":"203","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":34},{"ruleId":"155","severity":1,"message":"204","line":4,"column":21,"nodeType":"157","messageId":"158","endLine":4,"endColumn":32},{"ruleId":"155","severity":1,"message":"203","line":2,"column":17,"nodeType":"157","messageId":"158","endLine":2,"endColumn":34},{"ruleId":"155","severity":1,"message":"169","line":4,"column":21,"nodeType":"157","messageId":"158","endLine":4,"endColumn":29},{"ruleId":"155","severity":1,"message":"205","line":7,"column":22,"nodeType":"157","messageId":"158","endLine":7,"endColumn":34},{"ruleId":"189","severity":1,"message":"190","line":16,"column":27,"nodeType":"191","messageId":"192","endLine":16,"endColumn":29},{"ruleId":"193","severity":1,"message":"194","line":28,"column":7,"nodeType":"195","endLine":28,"endColumn":9,"suggestions":"206"},{"ruleId":"155","severity":1,"message":"207","line":20,"column":9,"nodeType":"157","messageId":"158","endLine":20,"endColumn":16},{"ruleId":"155","severity":1,"message":"172","line":5,"column":10,"nodeType":"157","messageId":"158","endLine":5,"endColumn":14},{"ruleId":"155","severity":1,"message":"188","line":7,"column":11,"nodeType":"157","messageId":"158","endLine":7,"endColumn":19},{"ruleId":"189","severity":1,"message":"190","line":10,"column":19,"nodeType":"191","messageId":"192","endLine":10,"endColumn":21},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'useNavigate' is defined but never used.","react/jsx-pascal-case","Imported JSX component Create_Post must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useState' is defined but never used.","'GetWithRefresh' is defined but never used.","'Bounce' is defined but never used.","'Fade' is defined but never used.","'Flip' is defined but never used.","'Roll' is defined but never used.","'Rotate' is defined but never used.","'Slide' is defined but never used.","'Zoom' is defined but never used.","'AnimatePresence' is defined but never used.","'motion' is defined but never used.","'Parallax' is defined but never used.","'ParallaxProvider' is defined but never used.","'ParallaxBanner' is defined but never used.","'backgroundImage' is defined but never used.","'Swal' is defined but never used.","'Create_Post' is defined but never used.","'axios' is assigned a value but never used.","'rotation' is assigned a value but never used.","'location' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'beforeLoad'. Either include it or remove the dependency array.","ArrayExpression",["208"],"'cookies' is defined but never used.","Expected '!==' and instead saw '!='.",["209"],"'CreateStyle' is defined but never used.","'Reveal' is defined but never used.","'variants2' is assigned a value but never used.","'useViewportScroll' is defined but never used.","'useLocation' is defined but never used.","'getUserPhoto' is defined but never used.",["210"],"'request' is assigned a value but never used.",{"desc":"211","fix":"212"},{"desc":"211","fix":"213"},{"desc":"211","fix":"214"},"Update the dependencies array to be: [beforeLoad]",{"range":"215","text":"216"},{"range":"217","text":"216"},{"range":"218","text":"216"},[1703,1705],"[beforeLoad]",[7642,7644],[1022,1024]]